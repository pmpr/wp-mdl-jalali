<?php
 namespace Pmpr\Package\Jalali; use Pmpr\Common\Foundation\Decorator\DecoratorI18N; use Pmpr\Common\Foundation\Manipulate\Type\ManipulateArray; class Translator extends Container { const SEPARATOR = "\56"; const PERSIAN_NUMBERS = ["\xd9\xaa", "\xdb\260", "\xdb\261", "\333\xb2", "\xdb\263", "\xdb\xb4", "\xdb\265", "\xdb\xb6", "\333\267", "\xdb\xb8", "\xdb\xb9", self::SEPARATOR => self::SEPARATOR]; const ENGLISH_NUMBERS = ["\45", "\60", "\x31", "\62", "\x33", "\64", "\x35", "\x36", "\x37", "\x38", "\71", self::SEPARATOR => self::SEPARATOR]; public function addFilters() { $this->addFilter($this->generateHook("\164\162\141\x6e\x73\137\167\x6f\x72\x64"), [$this, "\x74\162\x61\x6e\163\x6c\x61\x74\x65"], 10, 2)->addFilter($this->generateHook("\x74\162\141\156\163\137\156\x75\155\x62\x65\x72"), [$this, "\164\162\141\156\x73\x6c\141\x74\145\x4e\165\155\142\x65\x72"], 10, 3); parent::addFilters(); } public function translate($V2BGP, $HgXrw) { if ($HgXrw) { goto s2uj1; } $HgXrw = DecoratorI18N::getLocale(); s2uj1: switch ($HgXrw) { case "\x66\141": case "\146\141\x5f\x49\122": $V2BGP = $this->arabic2persian($V2BGP); $V2BGP = $this->english2persian($V2BGP); goto T6FVD; case "\145\x6e": case "\x65\156\137\125\x53": $V2BGP = $this->numbers2english($V2BGP); goto T6FVD; } uiMip: T6FVD: return $V2BGP; } public function arabic2persian($V2BGP) { return str_replace(["\331\x8a", "\xd9\x83", "\330\xa9", "\331\244", "\331\xa5", "\xd9\246"], ["\333\x8c", "\xda\xa9", "\xd9\207", "\xdb\xb4", "\xdb\265", "\333\xb6"], $V2BGP); } public function english2persian($qXeD1) { return preg_replace_callback("\x2f\x28\77\72\x26\x23\x5c\x64\173\62\54\x34\175\x3b\x29\x7c\x28\x5c\144\x2b\x5b\134\56\134\144\x5d\x2a\51\x7c\50\77\72\x5b\x61\x2d\172\135\x28\x3f\72\133\x5c\170\x30\60\x2d\x5c\170\63\102\134\x78\63\104\55\x5c\x78\x37\x46\x5d\x7c\x3c\x5c\163\x2a\x5b\x5e\x3e\135\53\x3e\51\x2a\x29\174\74\134\x73\52\133\x5e\x3e\135\x2b\76\x2f\x69", [$this, "\156\165\x6d\142\145\162\163\x32\x70\x65\x72\x73\x69\x61\x6e"], $qXeD1); } private function numbers2persian($sC3l_) { $ur5la = ManipulateArray::get($sC3l_, 1, false); if ($ur5la !== false) { goto kRTNn; } $ur5la = ManipulateArray::get($sC3l_, 0); goto eI_aI; kRTNn: $ur5la = str_replace(self::ENGLISH_NUMBERS, self::PERSIAN_NUMBERS, $ur5la); eI_aI: return $ur5la; } public function numbers2english($O6BPh) { return str_replace(self::PERSIAN_NUMBERS, self::ENGLISH_NUMBERS, $O6BPh); } public function translateNumber($qXeD1, $HgXrw = "\x66\141", $rYEZ1 = "\331\253") { $RQ3RY = self::ENGLISH_NUMBERS; $Mmh1y = self::PERSIAN_NUMBERS; $Mmh1y[self::SEPARATOR] = $rYEZ1; $vCW63 = in_array($HgXrw, ["\146\141", "\x66\141\137\x49\122"]); return $vCW63 ? str_replace($RQ3RY, $Mmh1y, $qXeD1) : str_replace($Mmh1y, $RQ3RY, $qXeD1); } }
